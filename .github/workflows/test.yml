# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [opened, synchronize, reopened]
permissions: write-all

jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0 
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
#     - name: "Set current date as env variable"
#       run: |
#           echo "builddate=$(TZ=Asia/Kolkata date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
#       id: version  # this is used on variable path

    - name: print date and time
      run: |
        echo "Current date and time: $(TZ=Asia/Kolkata date +'%Y-%m-%d %H:%M:%S')"
    - name: Create/Update Log File
      run: |
        ENTRY_NUMBER=$(git rev-list --count HEAD)
        DATE_TIME=$(date)
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        LOG_ENTRY="Entry: $ENTRY_NUMBER | Date: $DATE_TIME | Branch: $BRANCH_NAME | Workflow run at $DATE_TIME"
        echo "$LOG_ENTRY" >> logs.txt
        
    - name: Commit and Push Changes
      run: |
        git config --global user.name ${{ secrets.GH_USER }}
        git config --global user.email ${{ secrets.GH_USER }}
        git add logs.txt
        git commit -m "Update log file"
        git push
      
#         git config --global user.name "github-actions[bot]"
#         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        
      env:
       GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        
#     - uses: mr-smithers-excellent/docker-build-push@v6
#       with:
#         image: mukunda2912/my-project
#         registry: docker.io
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}
        
#     - name: Run Docker Image
#     - run: docker run -p 127.0.0.1:3000:3000 mukunda2912/newapp
    
#     - name: Test Docker Image
#     - run: docker ps
    
#     - run: npm ci
#     - run: npm run build --if-present
    
